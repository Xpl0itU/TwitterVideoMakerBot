name: Build binaries
on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [macos-11, ubuntu-22.04, windows-2019]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Download and Install UPX
        run: |
          if [[ "${{ matrix.os }}" == "windows-2019" ]]; then
            Invoke-WebRequest -UseBasicParsing https://github.com/upx/upx/releases/download/v4.0.2/upx-4.0.2-win64.zip -OutFile upx.zip
            Expand-Archive upx.zip -DestinationPath upx
            $env:PATH += ";$(pwd)/upx"
          else
            curl -L https://github.com/upx/upx/releases/download/v4.0.2/upx-4.0.2-amd64_linux.tar.xz | tar -xJ
            export PATH=$PATH:$(pwd)/upx-4.0.2-amd64_linux
          fi

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          architecture: 'x64'
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt
      
      - name: Create virtual environment
        run: python -m venv env
        
      - name: Activate virtual environment
        run: source env/bin/activate
        if: runner.os != 'Windows'
        
      - name: Activate virtual environment
        run: env\Scripts\activate.bat
        if: runner.os == 'Windows'

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          python -m textblob.download_corpora
          python -m spacy download en_core_web_sm

      - name: Build Executable
        run: |
          pyinstaller --clean --upx-dir=upx --noconfirm Fudgify.spec

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }} Build
          path: |
            dist/